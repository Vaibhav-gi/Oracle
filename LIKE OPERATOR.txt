                           Like operator
                         =================

4.like operator:-like operator is used to retrieve data from database based on 
================ specified pattern in where clause.

   Along with like operator oracle provided 2 special wild card characters.
These are having special meaning.
 
1)% ---> string or group of characters matching(replaces 0 or 
                                                any no of characters)

2)_ ---> single character matching purpose(replaces 1 char)

Syntax:-
=======
 select * from tablename where columnname like 'character pattern';

-----------------------------------------------------------------------------------

1.Write a query to display the employees whose ename start with M 
   from emp table using like operator?
QUERY:
	SELECT * FROM EMP WHERE ENAME  LIKE 'M%';

2.Write a query to display the employees whose ename end with S from
   emp table using like operator?
QUERY:
	SELECT * FROM EMP WHERE ENAME LIKE '%S';

3.Write a query to display the employees whose empno start with
  76 from emp table by using like operator?
QUERY:
	SELECT * FROM EMP WHERE EMPNO LIKE '76%';

4.Write a query to display the employees whose ename contain M in any position 
  from emp table by using like operator?
QUERY:
	SELECT * FROM EMP WHERE ENAME LIKE '%M%';

5.Write a query to display the employee records whose name 2nd
  character is A?
QUERY:
	SELECT * FROM EMP WHERE ENAME LIKE '_A%';

6.Write a query to display the employee records whose name 3rd 
  character is M?
QUERY:
	SELECT * FROM EMP WHERE ENAME LIKE '__M%';

7.Write a query to display the employee records whose name has 4
  letters from emp table by using like operator?
QUERY:
	SELECT * FROM EMP WHERE ENAME LIKE '____';

8.Write a query to display the employees who are getting 3 digit
  salary from emp table by using like operator?
QUERY:
	SELECT * FROM EMP WHERE SAL LIKE '___';

9.Write a query to display the employees who are joining in the year
  81 from emp table using like operator?
QUERY:
	SELECT * FROM EMP WHERE HIREDATE LIKE '%81';	

10.Write a query to display the employees who are joining in the 
   month DECEMBER from the emp table using like operator?
QUERY:
	SELECT * FROM EMP WHERE HIREDATE LIKE '%DEC%';

11.Write a query to display the employees whose name contain either
  'AM' or 'AR' strings from emp table by using like operator
QUERY:
	SELECT * FROM EMP WHERE ENAME LIKE '%AM%' OR ENAME LIKE '%AR%';
 
12.Write a query to display the employee records whose name started
   and ended with S?
QUERY:
	SELECT * FROM EMP WHERE ENAME LIKE 'S%' AND ENAME LIKE '%S';

13.Write a query to display the employee records whose name 
   starting with VOWEL?
QUERY:
	SELECT * FROM EMP WHERE ENAME LIKE 'A%' OR ENAME LIKE 'E%' OR ENAME LIKE 'I%' OR ENAME LIKE 'O%' OR ENAME LIKE 'U%';

14.Write an SQL query to retrieve all employee names from the table 
   EMP555 that contain the word 'SIRISHA' ?[INTERVIEW QUESTION]
QUERY:
	SELECT * FROM EMP555 WHERE ENAME LIKE '%SIRISHA%';


           ENAME
     ----------------
      SIRISHA GAYATRI
      GAYATRI SIRISHA
      ANUSHKA SHETTY
      ANU SIRISHA RAI
      SURYA SURYA

CREATE TABLE EMP555
(
ENAME VARCHAR2(20)
);

INSERT INTO EMP555 VALUES('SIRISHA GAYATRI');
INSERT INTO EMP555 VALUES('GAYATRI SIRISHA');
INSERT INTO EMP555 VALUES('ANUSHKA SHETTY');
INSERT INTO EMP555 VALUES('ANU SIRISHA RAI');
INSERT INTO EMP555 VALUES('SURYA SURYA');
COMMIT;

SQL>SELECT * FROM EMP555;

============================================================================================

15.Write an SQL query to display the NAME(use alias USERNAME) and their 
  email (use alias EMAILID) of users who have a phone number 
  ending with '29' from the USERS table ?[COGNIZENT INTERVIEW QUESTION]


USERS
USER_ID    NAME     EMAIL       PHONE_NUMBER


 Your output should have 2 columns as given below

   USERNAME      EMAILD

QUERY:
	 SELECT NAME AS USERNAME, EMAIL AS EMAILID FROM USERS WHERE PHONE_NUMBER LIKE '%29';



CREATE TABLE USERS (
    USER_ID NUMBER(10),
    NAME VARCHAR2(15),
    EMAIL VARCHAR2(20),
    PHONE_NUMBER VARCHAR2(15)
);

INSERT INTO USERS VALUES(1, 'ANUSHKA', 'anushka@gmail.com', '9876526229');         
INSERT INTO USERS VALUES(2, 'GOWTHAM', 'gowtham@gmail.com', '9912347810');
INSERT INTO USERS VALUES(3, 'SURYA',   'surya@gmail.com',   '9988776629'); 
INSERT INTO USERS VALUES(4, 'KAVYA PAPA','kavya@gmail.com', '9988776655');
COMMIT;

SQL>SELECT * FROM USERS;

----------------------------------------------------------------------------------
Mixed Query:-
===========

NOTE:-Where clause is used to filters the records in a table. And there
===== can be only one WHERE clause in every relational databases. if we
      want filter the data after where then we must use AND operator. 


1.Write a query to display employees who are working as either 'MANAGER' or 'CLERK' 
   and earning salary between 1500 and 3000 and joined in the year 1981 
   and are not working in departments 10 or 20 from EMP table ?
QUERY:
	SELECT * FROM EMP WHERE (JOB LIKE 'MANAGER' OR JOB LIKE 'CLERK') AND (SAL BETWEEN 1500 AND 3000) AND (HIREDATE LIKE '%81') AND (DEPTNO NOT IN(10,20));

-----------------------------------------------------------------------------------
                   Concatenation Operator(|| double pipe):
                   --------------------------------------   

 in relational databases if we want to display strings along with column data
then we must use concatenation operator.

    it is not a special operator rarely used in SQL and regularly
used in PL/SQL. 

Ex:-
===
sql>select 'GOWTHAM'||'RAJ' from dual;

'GOWTHAM'|
----------
GOWTHAMRAJ

1.Write a query to display the empno and a concatenated string showing the
  employee’s name and salary in the format: “ename earns sal” 
  from the emp table.

EXPECTED OUTPUT:-
================
   7369 SMITH  earns  800
   7499 ALLEN  earns  1600
   .
   .ED
   7902 FORD   earns  3000
   7934 MILLER earns  1300

QUERY:
	SELECT EMPNO ||' '|| ENAME ||' '|| 'EARNS' ||' '|| SAL FROM EMP;


2.display the output as following from emp table by using 
  concatenation operator 

   SMITH  works as CLERK
   ALLEN  works as SALESMAN
   .
   .
   JAMES WORKS AS CLERK
   FORD WORKS AS ANALYST
   MILLER WORKS AS CLERK	

QUERY:
	SELECT ENAME ||' '|| 'WORKS AS' ||' '|| JOB FROM EMP;

3.combine the two strings NARESH,IT
QUERY:
	SELECT 'NARSH' || 'IT' FROM DUAL;


-----------------------------------------------------------------------------------
                                NVL2()
                               ========
1.Update the employee commission with in emp table by using nvl2() 
  based on following conditions?

1.if comm-->null then update
     comm-->500

2.if comm-->not null then update
     comm-->comm+500

after checking the data use rollback command

QUERY:
	UPDATE EMP SET COMM = NVL2(COMM,COMM+500,600);	

----------------------------------------------------------------------------------
CREATE TABLE ITEM (
ITEM_NO NUMBER(5),
ITEM_NAME VARCHAR2(15),  
COLOR VARCHAR2(10),  
ITEM_SIZE  NUMBER(5),  
PRICE NUMBER(10),  
PURCHASED_DATE  DATE        
);


INSERT INTO ITEM  VALUES (1, 'Shirt', 'Red', 40, 499,'02-JAN-2025');
INSERT INTO ITEM  VALUES (2, 'Pant', 'Blue', 42, 799,'10-NOV-2024');
INSERT INTO ITEM  VALUES (3, 'Saree', 'Pink', NULL, 1200,'19-MAR-2023');
INSERT INTO ITEM  VALUES (4, 'Chudidar', 'Green', 38, 899,'16-JAN-2025');
INSERT INTO ITEM  VALUES (5, 'Lehanga', 'Yellow', NULL, 1500,'24-AUG-2025');
INSERT INTO ITEM  VALUES (6, 'Shirt', 'White', 44, 550,'16-APR-2025');
INSERT INTO ITEM  VALUES (7, 'Pant', 'Black', 40, 750,'12-DEC-2024' );
INSERT INTO ITEM  VALUES (8, 'Saree', 'Black', NULL, 1300.00,'18-SEP-2024');

COMMIT;

1.Write a query to display all items details whose price is greater than 1000.
QUERY: 	
	SELECT * FROM ITEM WHERE PRICE > 1000;

2.Write a query to display all items details where the color is not 'Red'.
QUERY:
	SELECT * FROM ITEM WHERE COLOR NOT IN ('Red');

3.Write a query to display the item details where the item name is either 
  shirt,saree,or chudidar.
QUERY:
	SELECT * FROM ITEM WHERE ITEM_NAME IN ('Shirt','Saree','Chudidar');	

4.Write a query to display item details where the price between 500 and 1200.
QUERY:
	SELECT * FROM ITEM WHERE PRICE BETWEEN 500 AND 1200;

5.Write a query to display item details where the item was purachased in 2024
QUERY:
	SELECT * FROM ITEM WHERE PURCHASED_DATE LIKE '%24';

6.Write a query to display item details where the item name is saree and 
  color must be pink.
QUERY:
	SELECT * FROM ITEM WHERE ITEM_NAME = 'Saree' AND COLOR = 'Pink';	

7.Write a query to display items where the item size is NULL
QUERY:
	SELECT * FROM ITEM WHERE ITEM_SIZE IS NULL;	

8.Write a query to display the details of the item where the ITEM_NAME is 
  Shirt,and the COLOR is 'Red', and the ITEM_SIZE is 40.
QUERY:
	SELECT * FROM ITEM WHERE ITEM_NAME = 'Shirt' AND COLOR = 'Red' AND ITEM_SIZE = 40;	

9.Write a query to display items from the ITEM table where:

• The item is either a 'Shirt' or a 'Pant'

• The price is between 500 and 800

• The item was purchased in the year 2025

• The color is not 'Red' or 'Black'
 
QUERY:
	SELECT * FROM ITEM WHERE (ITEM_NAME = 'Shirt' OR ITEM_NAME = 'Pant') AND (PRICE BETWEEN 500 AND 800) AND (PURCHASED_DATE LIKE '%25') AND (COLOR NOT IN('Red', 'Black'));